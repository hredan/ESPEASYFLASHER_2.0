on:
    workflow_call:
      inputs:
        target:
          description: 'Targets to build'
          required: true
          default: 'all'
          type: string
jobs:
  windows_exe:
    if: ${{ inputs.target == 'win64' || inputs.target == 'all' }}
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python "3.12"
      uses: actions/setup-python@v5
      with: 
        python-version: "3.12"
    - name: run PyInstaller
      run: |
        python --version
        pip install pyinstaller
        pip install esptool
        python ./Scripts/build_info.py -s ${{github.sha}} -r ${{github.repository}}
        python -m PyInstaller -F --noconsole --collect-data esptool --add-data "LogoEasyFlash.png;." --add-data "build_info.txt;." --add-data "./resource/win/icon_256x256.png;." espeasyflasher.py
        copy ./ESPEasyFlasherConfig.json ./dist
        copy ./build_info.txt ./dist
        mkdir ./dist/ESP_Packages
        copy ./ESP_Packages/README.md ./dist/ESP_Packages
        ren dist ESPEasyFlasher
        7z.exe a -tzip espeasyflasher_win64.zip ESPEasyFlasher
    - name: Create Windows Artifact
      uses: actions/upload-artifact@v4
      with:
        # Artifact name
        name: espeasyflasher_win64
        # A file, directory or wildcard pattern that describes what to upload
        path: ./espeasyflasher_win64.zip
        # The desired behavior if no files are found using the provided path.
        retention-days: 10
  linux_x64_executable:
    if: ${{ inputs.target == 'linux64' || inputs.target == 'all' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python "3.12"
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: run PyInstaller
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install esptool
        ./Scripts/build_linux.sh
        tar -czf ./ESPEasyFlasher_linux_x64.tar.gz -C ./dist .
    - name: Create Linux Artefact
      uses: actions/upload-artifact@v4
      with:
        # Artifact name
        name: espeasyflasher_linux_x64
        # A file, directory or wildcard pattern that describes what to upload
        path: ./ESPEasyFlasher_linux_x64.tar.gz
        # The desired behavior if no files are found using the provided path.
  linux_arm64_executable:
    if: ${{ inputs.target == 'linuxarm64' || inputs.target == 'all' }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - # Add support for more platforms with QEMU (optional)
      # https://github.com/docker/setup-qemu-action
      name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: run PyInstaller in docker
      run: |
        docker build --platform linux/arm64 -t python_eef:arm64 -f ./Dockerfile_arm .
        docker run -v $(pwd):/home/workspace -w /home/workspace -i --platform linux/arm64 --env GIT_HASH=${{github.sha}} --env GIT_URL=${{github.repository}} python_eef:arm64 bash /home/workspace/Scripts/build_linux_arm.sh
        cp -r ./dist ./ESPEasyFlasher
        tar -czf ./ESPEasyFlasher_linux_arm64.tar.gz ./ESPEasyFlasher
    - name: Create LinuxArm64 Artefact
      uses: actions/upload-artifact@v4
      with:
        # Artifact name
        name: espeasyflasher_linux_arm64
        # A file, directory or wildcard pattern that describes what to upload
        path: ./ESPEasyFlasher_linux_arm64.tar.gz
        # The desired behavior if no files are found using the provided path.
  linux_armv7_executable:
    if: ${{ inputs.target == 'linuxarmv7' || inputs.target == 'all' }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - # Add support for more platforms with QEMU (optional)
      # https://github.com/docker/setup-qemu-action
      name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: run PyInstaller in docker
      run: |
        docker build --platform linux/arm/v7 -t python_eef:armv7 -f ./Dockerfile_arm .
        docker run -v $(pwd):/home/workspace -w /home/workspace -i --platform linux/arm/v7 --env GIT_HASH=${{github.sha}} --env GIT_URL=${{github.repository}} python_eef:armv7 bash /home/workspace/Scripts/build_linux_arm.sh
        cp -r ./dist ./ESPEasyFlasher
        tar -czf ./ESPEasyFlasher_linux_armv7.tar.gz ./ESPEasyFlasher
    - name: Create LinuxArmv7 Artefact
      uses: actions/upload-artifact@v4
      with:
        # Artifact name
        name: espeasyflasher_linux_armv7
        # A file, directory or wildcard pattern that describes what to upload
        path: ./ESPEasyFlasher_linux_armv7.tar.gz
        # The desired behavior if no files are found using the provided path.
  macOs_x64_executable:
    if: ${{ inputs.target == 'macos_intel' || inputs.target == 'all' }}
    runs-on: macos-13
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python "3.12"
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: run PyInstaller
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install esptool
        ./Scripts/build_macOS.sh
        tar -czf ./dist/ESPEasyFlasher_macOs_intel.tar.gz -C ./dist ./ESPEasyFlasher.app
    - name: Create macOs Artefact
      uses: actions/upload-artifact@v4
      with:
        # Artifact name
        name: espeasyflasher_macOs_intel
        # A file, directory or wildcard pattern that describes what to upload
        path: ./dist/ESPEasyFlasher_macOs_intel.tar.gz
        retention-days: 10
        # The desired behavior if no files are found using the provided path.
  macOs_arm64_executable:
    if: ${{ inputs.target == 'macos_arm64' || inputs.target == 'all' }}
    runs-on: macos-14
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python "3.12"
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: run PyInstaller
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install esptool
        ./Scripts/build_macOS.sh
        tar -czf ./dist/ESPEasyFlasher_macOs_arm64.tar.gz -C ./dist ./ESPEasyFlasher.app

    - name: Create macOs Artefact
      uses: actions/upload-artifact@v4
      with:
        # Artifact name
        name: espeasyflasher_macOs_arm64
        # A file, directory or wildcard pattern that describes what to upload
        path: ./dist/ESPEasyFlasher_macOs_arm64.tar.gz
        retention-days: 10
        # The desired behavior if no files are found using the provided path.